nameOverride: ""
fullnameOverride: ""
kubeVersion: ""

replicaCount: 1

image:
  registry: example.registry.com:5678
  pullPolicy: IfNotPresent
  repository: containers/tinode
  tag: latest

imagePullSecrets:
  - name: "pullSecret-registry"

smtp:
  enabled: true
  emailValidationRequired: false
  auth:
    enabled: false
    authMechanism: "login"
    login: "user-login"
    #existingSecret: ""            # need: SMTP_PASSWORD env
  server: "smtp.example.com"
  port: "25"
  sender: "noreply@example.com"

# Use adapter depends on your database (see supported adapters):
storeUseAdapter: "mongodb"
mongodb:
  enabled: true
  uri: ""
  addresess:
    - "mongo.example.com:1529"
  database: "tinode"

  auth:
    enabled: true
    authMechanism: ""
    authSource: ""
    #existingSecret: "" # need: TINODE_MONGODB_USERNAME/TINODE_MONGODB_PASSWORD

  tlsEnabled: false
  tlsSkipVerify: true

extraEnvVars: {}

serviceAccount:
  create: false
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}

securityContext: {}

service:
  type: ClusterIP
  app: 6060
  grpc: 16060

ingress:
  enabled: false
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: tinode.k8s-cloud.example.com
      paths:
        path: /
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

ingress-grpc:
  enabled: true
  annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
  hosts:
    - host: tinode.grpc.k8s-cloud.example.com
      paths:
         path: /
  tls: []
#    - secretName: chart-example-tls
#      hosts:
#        - chart-example.local

resources:
  limits:
    cpu: 1
    memory: 500Mi
  requests:
    cpu: 200m
    memory: 500Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector:
      kubernetes.io/role: worker

tolerations: []

affinity: {}

configuration: ""