{{- $fullName := include "tinode.fullname" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "tinode.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "tinode.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "tinode.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tinode.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          env:
            - name: TINODE_BIND_PORT
              value: '{{ .Values.service.app }}'
            - name: TINODE_BIND_GRPC_PORT
              value: '{{ .Values.service.grpc }}'
      {{- if .Values.smtp.enabled }}
        {{- if .Values.ingress.enabled }}
            {{- if index .Values "ingress" "tls" }}
            - name: TINODE_SMTP_HOST_URL
              value: 'https://{{ index .Values.ingress.hosts 0 "host" }}'
            {{- else }}
            - name: TINODE_SMTP_HOST_URL
              value: 'http://{{ index .Values.ingress.hosts 0 "host" }}'
            {{- end -}}
        {{- end }}
        {{- if .Values.smtp.emailValidationRequired }}
            - name: TINODE_EMAIL_VALIDATION
              value: "auth"
        {{- end -}}
        {{- if .Values.smtp.auth.enabled }}
            - name: TINODE_SMTP_AUTH_MECHANISM
              value: '{{ .Values.smtp.auth.authMechanism }}'
            - name: TINODE_SMTP_LOGIN
              value: '{{ .Values.smtp.auth.login }}'
            - name: TINODE_SMTP_SENDER_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if .Values.smtp.auth.existingSecret }}
                  name: {{ .Values.smtp.auth.existingSecret }}
                  {{ else }}
                  name: {{ $fullName }}
                  {{ end -}}
                  key: TINODE_SMTP_SENDER_PASSWORD
        {{- end }}
            - name: TINODE_SMTP_SERVER
              value: '{{ .Values.smtp.server }}'
            - name: TINODE_SMTP_PORT
              value: '{{ .Values.smtp.port }}'
            - name: TINODE_SMTP_SENDER
              value: '{{ .Values.smtp.sender }}'
      {{- end }}
      {{- if .Values.mongodb.enabled }}
            - name: TINODE_USE_ADAPTER
              value: "mongodb"
        {{- if .Values.mongodb.uri }}
            - name: TINODE_MONGODB_URI
              value: '{{ .Values.mongodb.uri }}'
        {{- else }}
            - name: TINODE_MONGODB_ADDRESSES
              value: '{{ .Values.mongodb.addresess | toJson }}'
        {{- end }}
            - name: TINODE_MONGODB_DATABASE
              value: '{{ .Values.mongodb.database }}'
            - name: TINODE_MONGODB_TLS
              value: '{{ .Values.mongodb.tlsEnabled }}'
            - name: TINODE_MONGODB_TLS_SKIP_VERIFY
              value: '{{ .Values.mongodb.tlsSkipVerify }}'
        {{- if .Values.mongodb.auth.enabled }}
            - name: TINODE_MONGODB_AUTH_MECHANISM
              value: '{{ .Values.mongodb.auth.authMechanism }}'
            - name: TINODE_MONGODB_AUTH_SOURCE
              value: '{{ .Values.mongodb.auth.authSource }}'
            - name: TINODE_MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if .Values.mongodb.auth.existingSecret }}
                  name: {{ .Values.mongodb.auth.existingSecret }}
                  {{ else }}
                  name: {{ $fullName }}
                  {{- end }}
                  key: TINODE_MONGODB_PASSWORD
            - name: TINODE_MONGODB_USERNAME
              valueFrom:
                secretKeyRef:
                  {{- if .Values.mongodb.auth.existingSecret }}
                  name: {{ .Values.mongodb.auth.existingSecret }}
                  {{ else }}
                  name: {{ $fullName }}
                  {{- end }}
                  key: TINODE_MONGODB_USERNAME
        {{- end }}
      {{- end }}
            {{- if .Values.extraEnvVars }}
            {{- toYaml .Values.extraEnvVars | nindent 12 }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry | default "registry.hub.docker.com" }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }} 
          ports:
            - name: app
              containerPort: {{ .Values.service.app }}
              protocol: TCP
            - name: grpc
              containerPort: {{ .Values.service.grpc }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}